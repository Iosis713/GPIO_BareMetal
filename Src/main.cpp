/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2025 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include "../Inc/Gpio.hpp"
#include "../Inc/Button.hpp"
#include "../Inc/Timer.hpp"
#include "main.h"

//drivers/cmsis/include/core_cm0plus////systick_config - method
//To Cortex system timer - in hal clock config

void Delay(const uint32_t delay)
{
	const uint32_t startTime = SystemTimer::Now();

	while(SystemTimer::Now() < startTime + delay)
	{
		//just wait
	}
}

constexpr uint32_t LD2_TIMER = 500; //ms
constexpr uint32_t LD3_TIMER = 1000;
constexpr uint32_t LD4_TIMER = 250;

int main(void)
{
	//4MHz --> 1s = 4 000 000
	// 4000 000 / 1000
	SysTick_Config(4000);

	uint32_t TimerLD2 = SystemTimer::Now();
	uint32_t TimerLD3 = SystemTimer::Now();
	uint32_t TimerLD4 = SystemTimer::Now();

	//C++style
	GpioOutput<GPIOA_BASE, 5> ld2;
	GpioOutput<GPIOA_BASE, 6> ld3;
	GpioOutput<GPIOA_BASE, 7> ld4;
	while (true)
	{
		if ((SystemTimer::Now() -  TimerLD2) > LD2_TIMER)
		{
			TimerLD2 = SystemTimer::Now();
			ld2.Toggle();
		}

		if ((SystemTimer::Now() -  TimerLD3) > LD3_TIMER)
		{
			TimerLD3 = SystemTimer::Now();
			ld3.Toggle();
		}

		if ((SystemTimer::Now() -  TimerLD4) > LD4_TIMER)
		{
			TimerLD4 = SystemTimer::Now();
			ld4.Toggle();
		}
	}
}
